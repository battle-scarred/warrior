<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.app_info.App_info_Mapper">

	<select id="getlist" resultType="App_info">
		select info.*,dict.valueName as
		flatformName ,
		(SELECT
		cate1.categoryName from app_category as cate1 where
		info.categoryLevel1 = cate1.id )as categoryLevel1Name,
		(SELECT
		cate2.categoryName from app_category as cate2 where
		info.categoryLevel2 = cate2.id)as categoryLevel2Name,
		(SELECT
		cate3.categoryName from app_category as cate3 where
		info.categoryLevel3 = cate3.id)as categoryLevel3Name,
		ver.versionNo as
		versionNo,(SELECT a.valueName from data_dictionary as a where
		a.valueId = info.`status` and a.typeCode='App_STATUS' )as statusName
		from app_info as info LEFT JOIN app_version as ver ON ver.id =
		info.versionId , data_dictionary as dict
		where info.flatformId =
		dict.valueId and dict.typeCode='APP_FLATFORM'

		<if test="querySoftwareName !=null and querySoftwareName != ''">
			and info.softwareName LIKE "%" #{querySoftwareName} "%"

		</if>
		<if test="queryFlatformId !=null and queryFlatformId != ''">
			and info.flatformId = #{queryFlatformId }

		</if>
		<if test="queryStatus !=null and queryStatus != ''">
			and info.`status` = #{queryStatus }

		</if>
		<if test="queryCategoryLevel1 !=null and queryCategoryLevel1 != ''">
			and info.categoryLevel1=#{queryCategoryLevel1}

		</if>
		<if test="queryCategoryLevel2 !=null and queryCategoryLevel2 != ''">
			and info.categoryLevel2 = #{queryCategoryLevel2}

		</if>
		<if test="queryCategoryLevel3 !=null and queryCategoryLevel3 != ''">
			and info.categoryLevel3 = #{queryCategoryLevel3}

		</if>



		<if test="status !=null and status != ''">
			and info.status = #{status}

		</if>



		ORDER
		BY info.id limit #{pageIndex},5
	</select>


	<select id="getcount" resultType="Integer">

		select count(*)
		from app_info as
		info LEFT JOIN app_version as ver ON
		ver.id =
		info.versionId ,
		data_dictionary as dict
		where info.flatformId =
		dict.valueId and
		dict.typeCode='APP_FLATFORM'
		<if test="querySoftwareName !=null and querySoftwareName != ''">
			and info.softwareName LIKE "%" #{querySoftwareName} "%"

		</if>
		<if test="queryFlatformId !=null and queryFlatformId != ''">
			and info.flatformId = #{queryFlatformId }

		</if>
		<if test="queryStatus !=null and queryStatus != ''">
			and info.`status` = #{queryStatus }

		</if>
		<if test="queryCategoryLevel1 !=null and queryCategoryLevel1 != ''">
			and info.categoryLevel1=#{queryCategoryLevel1}

		</if>
		<if test="queryCategoryLevel2 !=null and queryCategoryLevel2 != ''">
			and info.categoryLevel2 = #{queryCategoryLevel2}

		</if>
		<if test="queryCategoryLevel3 !=null and queryCategoryLevel3 != ''">
			and info.categoryLevel3 = #{queryCategoryLevel3}

		</if>
		ORDER
		BY info.id;

	</select>


	<update id="update">
		update app_info set versionId=#{versionId} where
		id=#{id}
	</update>


	<select id="getappinfo" resultType="app_info">

		select i.*,d.valueName as
		statusName from app_info as i, data_dictionary as
		d where d.valueId =
		i.`status` and d.typeCode ='APP_STATUS' and i.id=
		#{id}
	</select>

	<update id="updateClass" parameterType="app_info">
		
		update app_info
		<set>
			<if test="flatformId !=null and flatformId != ''">
				flatformId=#{flatformId},

			</if>
			<if test="appinfo !=null and appinfo != ''">
					appinfo=#{appinfo},

			</if>
			<if test="categoryLevel3 !=null and categoryLevel3 != ''">
				categoryLevel3=#{categoryLevel3},

			</if>
			<if test="categoryLevel2 !=null and categoryLevel2 != ''">
				categoryLevel2=#{categoryLevel2},

			</if>
			<if test="categoryLevel1 !=null and categoryLevel1 != ''">
				categoryLevel1=#{categoryLevel1},

			</if>
			<if test="modifyDate !=null and modifyDate != ''">
				modifyDate=#{modifyDate},

			</if>
			<if test="modifyBy !=null and modifyBy != ''">
				modifyBy=#{modifyBy},

			</if>
			<if test="downloads !=null and downloads != ''">
				downloads=#{downloads},

			</if>
			<if test="softwareSize !=null and softwareSize != ''">
				softwareSize=#{softwareSize},

			</if>
			<if test="interfaceLanguage !=null and interfaceLanguage != ''">
				interfaceLanguage=#{interfaceLanguage},

			</if>
			<if test="supportROM !=null and supportROM != ''">
				supportROM=#{supportROM},

			</if>
			<if test="APKName !=null and APKName != ''">
				APKName=#{APKName},

			</if>
			<if test="softwareName !=null and softwareName != ''">
				softwareName=#{softwareName},

			</if>
			
		
		</set>
		where id =#{id}
	</update>


	<insert id="addappinfo" parameterType="app_info">
		INSERT
		app_info(softwareName,APKName,supportROM,interfaceLanguage
		,softwareSize,updateDate,devId,appInfo,status,onSaleDate,offSaleDate
		,flatformId,categoryLevel3,downloads,createdBy,creationDate,modifyBy
		,modifyDate,categoryLevel1,categoryLevel2,logoPicPath,logoLocPath,versionId)



		VALUES(#{softwareName},#{APKName},#{supportROM},#{interfaceLanguage}
		,#{softwareSize},#{updateDate},#{devId},#{appInfo},#{status},#{onSaleDate},#{offSaleDate}
		,#{flatformId},#{categoryLevel3},#{downloads},#{createdBy},#{creationDate},#{modifyBy}
		,#{modifyDate},#{categoryLevel1},#{categoryLevel2},#{logoPicPath},#{logoLocPath},#{versionId})

	</insert>

	<select id="SelectInfo" resultType="app_info">

		select info.*,dict.valueName
		as flatformName ,
		(SELECT cate1.categoryName from app_category as cate1
		where
		info.categoryLevel1 = cate1.id )as categoryLevel1Name,
		(SELECT
		cate2.categoryName from app_category as cate2 where
		info.categoryLevel2 = cate2.id)as categoryLevel2Name,
		(SELECT
		cate3.categoryName from app_category as cate3 where
		info.categoryLevel3 = cate3.id)as categoryLevel3Name,
		ver.versionNo as
		versionNo,(SELECT a.valueName from data_dictionary as a where
		a.valueId = info.`status` and a.typeCode='App_STATUS' )as statusName
		from app_info as info LEFT JOIN app_version as ver ON ver.id =
		info.versionId , data_dictionary as dict
		where info.flatformId =
		dict.valueId and dict.typeCode='APP_FLATFORM' and
		info.id = #{id} ORDER
		BY info.id ;
	</select>

	<delete id="delete">

		delete from app_info where id =#{id}
	</delete>
</mapper>